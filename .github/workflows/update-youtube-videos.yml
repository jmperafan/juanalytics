name: update-youtube-videos

on:
  # Run every Monday at 9 AM UTC
  schedule:
    - cron: '0 9 * * 1'

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-videos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          cd scripts
          pip install google-api-python-client google-auth google-auth-httplib2

      - name: Check if classified_videos.json exists
        id: check_file
        run: |
          if [ -f "scripts/classified_videos.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "📚 Found existing classified videos"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "🆕 No existing data, will fetch all videos"
          fi

      - name: Scrape YouTube videos
        id: scrape
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_DATA_API_KEY }}
        run: |
          cd scripts

          # Get channel handle from config
          CHANNEL_HANDLE=$(jq -r '.channel.handle // .channel.channel_id' config.json)

          echo "🔍 Fetching videos from YouTube channel: $CHANNEL_HANDLE"
          python youtube_scraper_api.py \
            --api-key "$YOUTUBE_API_KEY" \
            --channel-handle "$CHANNEL_HANDLE" \
            --output new_videos.json

          echo "✓ Scraped $(jq '. | length' new_videos.json) videos"

      - name: Merge with existing data
        if: steps.check_file.outputs.exists == 'true'
        run: |
          cd scripts
          echo "🔄 Merging with existing classified videos..."
          python merge_videos.py \
            --existing classified_videos.json \
            --new new_videos.json \
            --output merged_videos.json

          # Count new videos
          NEW_COUNT=$(jq '[.[] | select(.type == "")] | length' merged_videos.json)
          echo "new_count=$NEW_COUNT" >> $GITHUB_ENV
          echo "📊 Found $NEW_COUNT new unclassified videos"

          # Use merged data
          mv merged_videos.json classified_videos.json

      - name: Auto-classify videos
        run: |
          cd scripts
          INPUT_FILE="classified_videos.json"
          if [ ! -f "$INPUT_FILE" ]; then
            INPUT_FILE="new_videos.json"
          fi

          echo "🤖 Auto-classifying videos using config rules..."
          python auto_classify.py \
            --input "$INPUT_FILE" \
            --output classified_videos.json \
            --config config.json

      - name: Generate content files
        run: |
          cd scripts
          echo "📝 Generating markdown content..."
          python generate_content.py \
            --input classified_videos.json \
            --content-dir ../src/content \
            --overwrite

      - name: Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✓ Changes detected"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes detected"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Update YouTube videos and podcasts'
          title: '🎥 Weekly YouTube Video Update'
          body: |
            ## YouTube Video Update

            This PR automatically updates the site with new YouTube videos.

            ### What changed
            - Scraped latest videos from YouTube channel
            - Auto-classified videos as 'video' or 'podcast' based on title
            - Generated markdown content files

            ### Review checklist
            - [ ] Check that new videos are classified correctly
            - [ ] Update tags if needed in `scripts/classified_videos.json`
            - [ ] Re-run content generation if you made changes:
              ```bash
              cd scripts
              python generate_content.py --input classified_videos.json --overwrite
              ```

            ### Auto-classification rules
            - Videos with "podcast", "episode", or "interview" in title → `podcast`
            - All other videos → `video`

            **Note:** You can improve auto-classification in `.github/workflows/update-youtube-videos.yml`

            ---
            🤖 Auto-generated by [update-youtube-videos workflow](.github/workflows/update-youtube-videos.yml)
          branch: youtube-update
          delete-branch: true
          labels: |
            automated
            content

      - name: Summary
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "## 🎉 YouTube Update Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "A pull request has been created with the latest videos." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Review the PR" >> $GITHUB_STEP_SUMMARY
          echo "2. Check video classifications" >> $GITHUB_STEP_SUMMARY
          echo "3. Merge when ready!" >> $GITHUB_STEP_SUMMARY

      - name: No changes summary
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "## ℹ️ No Updates Needed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No new videos found. Your site is up to date!" >> $GITHUB_STEP_SUMMARY
