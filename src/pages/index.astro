---
import BaseLayout from '../layouts/BaseLayout.astro';
import YouTubeThumbnail from '../components/YouTubeThumbnail.astro';
import { getCollection } from 'astro:content';
import { readContentYAML } from '../utils/yamlParser';

// Get content from YAML (videos and podcasts)
const content = await readContentYAML();

// Get blogs from Astro content collections
const recentBlogs = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
).slice(0, 3);

// Get recent videos from YAML
const recentVideos = content.videos
  .map(video => ({
    data: {
      title: video.title,
      description: video.description,
      pubDate: video.date,
      videoUrl: video.url,
      thumbnail: video.thumbnail,
      platform: (video.platform as 'youtube' | 'vimeo' | 'other') || 'youtube',
      tags: video.tags,
    }
  }))
  .slice(0, 3);

// Get recent guest podcast appearances from YAML (excluding SQL Lingua Franca)
const recentPodcasts = content.podcasts
  .filter(p => !p.title.includes(' - ')) // Filter out SQL Lingua Franca episodes (they have " - " pattern)
  .map(podcast => ({
    slug: podcast.url.split('/').pop() || '',
    data: {
      title: podcast.title,
      description: podcast.description,
      pubDate: podcast.date,
      podcastName: podcast.podcast || podcast.extra2 || '',
      audioUrl: podcast.url,
      duration: podcast.duration,
      episode: podcast.episode || (podcast.extra1 ? parseInt(podcast.extra1) : undefined),
      thumbnail: podcast.thumbnail,
      type: (podcast.extra1 && parseInt(podcast.extra1) > 0) ? 'own' : 'guest',
      tags: podcast.tags,
    }
  }))
  .slice(0, 3);
---

<BaseLayout title="Juanalytics - Juan Manuel Perafan">
  <!-- Hero Section -->
  <section style="padding: 5rem 0 4rem; background: var(--color-bg);">
    <div class="container" style="max-width: 900px; text-align: center;">
      <h1 style="font-size: 3rem; margin-bottom: 1.25rem; color: var(--color-text); font-weight: 700; letter-spacing: -0.03em;">Juan Manuel Perafan</h1>
      <p style="font-size: 1.25rem; color: var(--color-text-light); line-height: 1.6; font-weight: 400;">
        Analytics Engineer | dbt Community Award Recipient | Data Community Organizer
      </p>
    </div>
  </section>

  <!-- About Preview -->
  <section style="padding: 5rem 0; background: var(--color-bg); border-top: 1px solid var(--color-border);">
    <div class="container" style="max-width: 800px;">
      <h2 style="margin-bottom: 2rem; font-size: 2rem; text-align: center;">About Me</h2>
      <p style="font-size: 1.125rem; color: var(--color-text); line-height: 1.8; margin-bottom: 1.5rem;">
        I'm an Analytics Engineer with over 8 years of experience helping organizations build robust data platforms and cultivate data-driven cultures. My expertise spans analytics engineering, data visualization, and building scalable data solutions with modern tools like dbt, Snowflake, and Tableau.
      </p>
      <p style="font-size: 1.125rem; color: var(--color-text); line-height: 1.8; margin-bottom: 1.5rem;">
        As a 2024 dbt Community Award Recipient, I'm passionate about sharing knowledge and building communities. I organize the Amsterdam dbt Meetup, Analytics Engineering Meetup, and Netherlands Data Visualization Meetup, bringing together data professionals to learn and grow together.
      </p>
      <div style="background: var(--color-bg-secondary); padding: 2rem; border-radius: 0.5rem; border-left: 4px solid var(--color-primary); margin-top: 2rem;">
        <h3 style="font-size: 1.25rem; margin-bottom: 1rem; color: var(--color-text);">Available for Speaking & Training</h3>
        <p style="font-size: 1.0625rem; color: var(--color-text-light); line-height: 1.8;">
          I'm available to speak at conferences and meetups, and to lead training sessions for data teams. Whether you need someone to deliver a keynote on analytics engineering best practices, run a hands-on dbt workshop, or train your team on modern data stack tools, I'd love to help. Reach out if you're interested in collaborating!
        </p>
      </div>
    </div>
  </section>

  <!-- Recent Podcasts (Guest Appearances) -->
  {recentPodcasts.length > 0 && (
    <section style="padding: 4rem 0;">
      <div class="container">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
          <h2>Recent Podcast Guest Appearances</h2>
          <a href="/podcasts">View all →</a>
        </div>
        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 1.5rem;">
          {recentPodcasts.map((podcast) => (
            <a href={podcast.data.audioUrl} target="_blank" rel="noopener noreferrer" class="card" style="padding: 0; overflow: hidden; display: flex; flex-direction: column;">
              {podcast.data.thumbnail ? (
                <img src={podcast.data.thumbnail} alt={podcast.data.title} style="width: 100%; height: 200px; object-fit: cover;" />
              ) : (
                <div style="width: 100%; height: 200px; background: var(--color-bg-secondary); display: flex; align-items: center; justify-content: center; color: var(--color-text-light);">
                  <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
                    <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
                    <line x1="12" y1="19" x2="12" y2="23"></line>
                    <line x1="8" y1="23" x2="16" y2="23"></line>
                  </svg>
                </div>
              )}
              <div style="padding: 1.5rem; flex: 1; display: flex; flex-direction: column;">
                <h3 style="margin-bottom: 0.5rem; font-size: 1.125rem; line-height: 1.4;">{podcast.data.title}</h3>
                <p style="color: var(--color-text-light); font-size: 0.875rem; margin-bottom: 0.75rem;">
                  {podcast.data.pubDate.toISOString().split('T')[0]}
                  {podcast.data.podcastName && ` • ${podcast.data.podcastName}`}
                  {podcast.data.episode && ` - Episode ${podcast.data.episode}`}
                </p>
                <p style="color: var(--color-text-light); font-size: 0.9375rem; line-height: 1.6; flex: 1; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">{podcast.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Recent Videos -->
  {recentVideos.length > 0 && (
    <section style="padding: 4rem 0; background: var(--color-bg-secondary);">
      <div class="container">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
          <h2>Recent Videos</h2>
          <a href="/videos">View all →</a>
        </div>
        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 1.5rem;">
          {recentVideos.map((video) => (
            <a href={`/videos/${video.slug}`} class="card" style="padding: 0; overflow: hidden; display: flex; flex-direction: column; background: var(--color-bg);">
              {video.data.videoUrl ? (
                <YouTubeThumbnail videoUrl={video.data.videoUrl} alt={video.data.title} thumbnail={video.data.thumbnail} />
              ) : video.data.thumbnail ? (
                <img src={video.data.thumbnail} alt={video.data.title} style="width: 100%; height: 200px; object-fit: cover;" />
              ) : (
                <div style="width: 100%; height: 200px; background: var(--color-bg-secondary); display: flex; align-items: center; justify-content: center; color: var(--color-text-light);">
                  <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polygon points="5 3 19 12 5 21 5 3"></polygon>
                  </svg>
                </div>
              )}
              <div style="padding: 1.5rem; flex: 1; display: flex; flex-direction: column;">
                <h3 style="margin-bottom: 0.75rem; font-size: 1.125rem; line-height: 1.4;">{video.data.title}</h3>
                <p style="color: var(--color-text-light); font-size: 0.875rem; margin-bottom: 0.75rem;">
                  {video.data.pubDate.toISOString().split('T')[0]}
                </p>
                <p style="color: var(--color-text-light); font-size: 0.9375rem; line-height: 1.6; flex: 1; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">{video.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Recent Blog Posts -->
  {recentBlogs.length > 0 && (
    <section style="padding: 4rem 0;">
      <div class="container">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
          <h2>Recent Blog Posts</h2>
          <a href="/blog">View all →</a>
        </div>
        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); gap: 1.5rem;">
          {recentBlogs.map((post) => (
            <a href={`/blog/${post.slug}`} class="card" style="padding: 0; overflow: hidden; display: flex; flex-direction: column;">
              {post.data.heroImage ? (
                <img src={post.data.heroImage} alt={post.data.title} style="width: 100%; height: 200px; object-fit: cover;" />
              ) : (
                <div style="width: 100%; height: 200px; background: var(--color-bg-secondary); display: flex; align-items: center; justify-content: center; color: var(--color-text-light);">
                  <p style="font-size: 0.875rem; padding: 1rem; text-align: center;">Add heroImage in frontmatter</p>
                </div>
              )}
              <div style="padding: 1.5rem; flex: 1; display: flex; flex-direction: column;">
                <h3 style="margin-bottom: 0.75rem; font-size: 1.125rem; line-height: 1.4;">{post.data.title}</h3>
                <p style="color: var(--color-text-light); font-size: 0.875rem; margin-bottom: 0.75rem;">
                  {post.data.pubDate.toISOString().split('T')[0]}
                </p>
                <p style="color: var(--color-text-light); font-size: 0.9375rem; line-height: 1.6; flex: 1; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">{post.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )}
</BaseLayout>
